.button {
    $this: 'button';

    --color: #{color(text)};
    --bg-color: #{color(white)};
    --border-color: #{color(primary)};

    --color-hover: #{color(text)};
    --bg-color-hover: #{color(gray1)};
    --border-color-hover: #{color(primary)};

    --color-disabled: #{color(gray5)};
    --bg-color-disabled: #{color(gray1)};
    --border-color-disabled: #{color(primary3)};

    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 4px;
    min-height: 40px;
    padding: 5px 10px;
    font-size: rem(14);
    color: var(--color);
    background-color: var(--bg-color);
    border: 1px solid var(--border-color);
    text-align: center;
    text-decoration: none;
    cursor: pointer;
    user-select: none;

    @include media-breakpoint-up(lg) {
        font-size: rem(16);
    }

    @include on-event {
        background-color: var(--bg-color-hover);
        color: var(--color-hover);
        border-color: var(--border-color-hover)
    }

    // text align (left, center)
    @each $breakpoint in map-keys($special-breakpoints) {
        $infix: breakpoint-infix($breakpoint, $special-breakpoints);

        @each $key, $val in (left: flex-start, center: center) {
            @include media-breakpoint-up($breakpoint, $special-breakpoints) {
                &--#{$key}#{$infix} {
                    text-align: $key;
                    justify-content: $val;
                }
            }
        }

    }

    &--loading {
        position: relative;

        &::before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            left: 0;
            bottom: 0;
            width: 1em;
            height: 1em;
            margin: auto;
            border-radius: 50%;
            font-size: rem(20);
            border: 2px solid var(--color);
            border-top-color: transparent;
            z-index: z(above);

            animation: spinner-border 0.75s linear infinite;
        }

        &::after {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            left: 0;
            bottom: 0;
            background-color: var(--bg-color);
        }

        @include on-event {
            &::after {
                background-color: var(--bg-color-hover);
            }
        }

        &.#{$this}--icon {
            &::before {
                position: static;
                flex-shrink: 0;
                margin: 0;
            }

            &::after {
                display: none;
            }

            .icon {
                display: none;
            }
        }
    }

    &--disabled {
        pointer-events: none;
        color: var(--color-disabled);
        background-color: var(--bg-color-disabled);
        border-color: var(--border-color-disabled);
    }

    .icon {
        font-size: rem(20);
        flex-shrink: 0;
    }

    &--small {
        min-height: 35px;

        &::before,
        .icon {
            font-size: rem(16);
        }
    }

    &--large {
        min-height: 45px;
    }


    &__primary {
        --color: #{color(white)};
        --bg-color: #{color(primary)};
        --border-color: #{color(primary)};

        --color-hover: #{color(white)};
        --bg-color-hover: #{color(primary2)};
        --border-color-hover: #{color(primary2)};

        --color-disabled: #{color(white)};
        --bg-color-disabled: #{color(primary4)};
        --border-color-disabled: #{color(primary4)};
    }

    &__secondary {
        --color: #{color(white)};
        --color-hover: #{color(white)};
        --bg-color: #{color(secondary)};

        --bg-color-hover: #{color(secondary2)};
        --border-color: #{color(secondary)};
        --border-color-hover: #{color(secondary2)};

        --color-disabled: #{color(white)};
        --bg-color-disabled: #{color(secondary4)};
        --border-color-disabled: #{color(secondary4)};
    }

    &__reset {
        --color: #{color(danger)};
        --color-hover: #{color(danger-hover)};
        --bg-color: #{color(transparent)};

        --bg-color-hover: #{color(transparent)};
        --border-color: #{color(transparent)};
        --border-color-hover: #{color(transparent)};

        --color-disabled: #{color(danger-light)};
        --bg-color-disabled: #{color(transparent)};
        --border-color-disabled: #{color(transparent)};

        &.#{$this}--loading:not(.#{$this}--icon) {
            color: color(transparent);
        }
    }

    &__simple {
        --color: #{color(text)};
        --bg-color: #{color(gray2)};
        --border-color: #{color(gray2)};

        --color-hover: #{color(primary2)};
        --bg-color-hover: #{color(gray2)};
        --border-color-hover: #{color(gray2)};

        --color-disabled: #{color(gray5)};
        --bg-color-disabled: #{color(gray1)};
        --border-color-disabled: #{color(gray1)};
    }
}

@keyframes spinner-border {
    to {
        transform: rotate(1turn);
    }
}
