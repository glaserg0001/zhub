extends ../base/main

block variables
  - var pageTitle = 'Styleguide'
  //- - var pageMainClass = 'test'
  //- - var baseUrlLvl = 1

block styles
  //- link(rel='stylesheet' href= URL_file('vendors/select2base/core', baseUrlLvl))
  link(rel='stylesheet' href= URL_file('pages/styleguide', baseUrlLvl))

block content
  .container.sg-container

    include ../components/filter

    h1.sg-heading Styleguide
    //- COLOR START
    h2.sg-heading Colors

    .sg-block
      each item in sgColors
        ul.sg-palette
          each val, key in item
            li(style=`background: ${val};` data-name=key data-value=val)
    //- COLOR START

    //- SPACING START
    h2.sg-heading Spacing
    .sg-block
      code m-0 = 0
      br
      code m-1 = 5px
      br
      code m-2 = 10px
      br
      code m-3 = 20px
      br
      code m-4 = 30px
      br
      code m-5 = 60px
      br
      code m-auto = auto
      hr.my-2
      code m-md-auto
      br
      code m-lg-auto
    //- SPACING END

    //- HEADING START
    h2.sg-heading Heading
    .sg-block
      h1 Heading 1
      h2 Heading 2
      h3 Heading 3
      h4 Heading 4
    //- HEADING END

    h2.sg-heading Forms
    h3.sg-heading Input
    //- FORM START
    //- INPUT
    .sg-block.sg-block--bg-transparent
      .row.align-items-end
        each item, id in sgInputFields
          - var attributes = {};
          - attributes.class = 'form-field';
          - attributes.class += item.group ? ' form-group' : '';

          - var attrLabel = {};
          - attrLabel.for = item.id;
          - attrLabel.class = `label ${item.labelClass ? item.labelClass : ''}`;

          - var attrInput = {};
          - attrInput.placeholder = item.placeholder ? item.placeholder : false;
          - attrInput.value = item.value ? item.value : false;
          - attrInput.class = item.class ? item.class : false;
          - attrInput.disabled = item.disabled ? true : false;

          .col-md-6
            div&attributes(attributes)
              if item.label
                label&attributes(attrLabel)=item.label
              input.input(id=id type='text')&attributes(attrInput)
              if item.copyInput
                input.input(id=id+'copy' type='text')&attributes(attrInput)
    //- SELECT
    h3.sg-heading Select
    each browserSelect in [true, false]
      h4.sg-heading=browserSelect ? 'Select Browser' : 'Select Custom'
      .sg-block.sg-block--bg-transparent
        .row.align-items-end

          each item, id in sgSelectFields
            if browserSelect && item.specificField
              - continue

            - var attributes = {};
            - attributes.class = 'form-field';
            - attributes.class += item.group ? ' form-group' : '';

            - var attrLabel = {};
            - attrLabel.for = browserSelect ? `${id}_browser` : id;
            - attrLabel.class = `label ${item.labelClass ? item.labelClass : ''}`;

            - var attrSelect = {};
            - attrSelect.class = item.class ? item.class : '';
            - attrSelect.class += item.theme ? ` select-custom--${item.theme}` : '';
            - attrSelect.class += item.size ? ` select-custom--${item.size}` : '';
            - attrSelect.disabled = item.disabled ? true : false;
            if !browserSelect
              - attrSelect.class += browserSelect ? '' : ' js-select';
              - attrSelect['data-placeholder'] = item.placeholder ? item.placeholder : false;
              - attrSelect['data-allow-clear'] = item.placeholder && item.allowClear ? 'true' : false;
              - attrSelect['data-theme'] = item.theme;
              - attrSelect['data-minimum-results-for-search'] = item.search ? false : '-1';
              - attrSelect['data-selection-css-class'] = item.size && `select2-selection--${item.size}`;
              - attrSelect['data-dropdown-css-class'] = item.size && `select2-dropdown--${item.size}`;

            .col-md-6
              div&attributes(attributes)
                if item.label
                  label&attributes(attrLabel)=item.label
                select(id=browserSelect ? `${id}_browser` : id)&attributes(attrSelect).select-custom
                  if item.placeholder
                    option=browserSelect ? item.placeholder : ''
                  each value, index in sgSelectOptions
                    option=value
                if item.copySelect
                  select&attributes(attrSelect).select-custom
                    if item.placeholder
                      option=browserSelect ? item.placeholder : ''
                    each value, index in sgSelectOptions
                      option=value
                    optgroup(label='Group Title')
                      each value, index in sgSelectOptions
                        option( disabled=(index == 1 ? true : false) )=value

    //- FORM END

    //- BUTTON START
    h2.sg-heading Buttons

    .row
      each item in sgButtons
        .col-sm-6.col-md-3.d-flex.flex-column
          h3.sg-heading.align-self-start=item.title
          .sg-block.flex-fill
            each helperItem in sgButtonsHelper
              - var attributes = {};
              - attributes.class = 'button';
              - attributes.class += item.addClass ? ` ${item.addClass}` : '';
              - attributes.class += item.icon ? ' button--icon' : '';
              - attributes.class += helperItem == 'Loading' ? ' button--loading' : '';
              - attributes.class += helperItem == 'Unable' ? ' button--disabled' : '';
              
              h4.sg-heading=helperItem
              .sg-block__list
                a(href='#')&attributes(attributes)
                  if item.icon
                    +icon(`icon-${item.icon}`, 'button__icon')
                  | #{item.text}
              .sg-block__list
                button&attributes(attributes)
                  if item.icon
                    +icon(`icon-${item.icon}`, 'button__icon')
                  | #{item.text}

    //- BUTTON END

    //- ICONS START

    h2.sg-heading Icons
    .sg-block
      if sgIconsSVG
        ul.sg-icons__list
          each val in sgIconsSVG
            if typeof val == 'string'
              li.sg-icons__item(data-name=val)
                +icon(val)
            else
              li.sg-icons__item(data-name=val[0])
                +icon(val[0], val[1])
    //- ICONS END
    //- VISAVILITY START
    h2.sg-heading Visibility
    //- h3.sg-heading Hidden multiply
    .sg-block
      table.sg-table.text-nowrap
        thead.text-left
          tr
            th
            each item in sgSpecialBreakpoints
              th=item.name
                small.d-block=item.description
        tbody
          each item in sgVisibility
            tr
              th.text-left.font-weight-normal
                code=item.class
              td(class=(item.small ? 'sg-enabled' : 'sg-disabled'))=item.small ? 'Visible': 'Hidden'
              td(class=(item.medium ? 'sg-enabled' : 'sg-disabled'))=item.medium ? 'Visible': 'Hidden'
              td(class=(item.large ? 'sg-enabled' : 'sg-disabled'))=item.large ? 'Visible': 'Hidden'
    //- VISAVILITY END
    //- SIZING START
    h2.sg-heading Sizing
    //- h3.sg-heading Hidden multiply
    .sg-block
      table.sg-table.text-nowrap
        thead.text-left
          tr
            th
            each item in sgSpecialBreakpoints
              th=item.name
                small.d-block=item.description
        tbody
          each item in sgSizing
            tr
              th.text-left.font-weight-normal
                code=item.class
              td(class=(item.small ? 'sg-enabled' : 'sg-disabled'))=item.small ? 'Active': 'Inactive'
              td(class=(item.medium ? 'sg-enabled' : 'sg-disabled'))=item.medium ? 'Active': 'Inactive'
              td(class=(item.large ? 'sg-enabled' : 'sg-disabled'))=item.large ? 'Active': 'Inactive'
    //- SIZING END


block scripts
  script(src= URL_file('styleguide', baseUrlLvl, 'js'))
